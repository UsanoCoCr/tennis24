我将数据工程分为了以下几步

1. 数据预处理
首先我们明确了我们的任务，创建了新的nextpoint_victor作为我们预测的目标，同时对数据进行了划分，将不同的数据归类为体力相关、比赛局势相关两个层面（我只写我这部分的思路了）
数据预处理时，由于很多数据的类型并不是int，或者不适用于分类任务，没有办法直接进行机器学习或深度学习，所以我们先更改了数据的格式，将p1_score p2_score winner_shot_type进行了转换

2. 机器学习
为了捕捉到强特征，我们在实现深度学习之前首先使用了机器学习的方法，首先进行了Lasso回归的交叉验证，寻找到是适用于此任务的模型参数α=0.0005，并且得到了数据重要性的分数。我们使用lasso回归的本意是因为lasso回归采取了L1范数计算距离，这种计算方式使得不重要的数据重要性分数趋于0。但是lasso回归并没有展现出很好的效果，我们分析这是因为不平衡的数据导致的。毕竟顶尖的网球选手出现双发失误等情况的概率较小。所以我们使用SMOTE(Synthetic Minority Over-sampling Technique)方法合成了少数类样本，平衡了类分布，并且通过随机森林方法进行集成学习，最终获取了较好的分数重要性分布

3. 特征增强
我们在知道了特征的重要性之后，对于重要的特征，我们使用了特征增强的方法。考虑到机器学习方法对于非线性关系可能会把握不加，且原始数据集的数据表示形式并不适用于机器学习，所以我们做了一系列的特征转换
    1. 首先，我们将set/game/point改为了净胜
    2. 其次，我们发现sub_point serve_no是强特征，并且具有可平方的性质，我们将他们的平方也转换为了新的特征

4. 深度学习
完成机器学习之后，我们发现局势模型预测后一分的准确率大约为57%，模型准确度没有获得显著提升的原因有：
    1. 未能和其他模型进行集成学习
    2. 模型只获取了上一个球的信息，并没有学习到短期或长期的比赛局势
    3. 模型复杂度较低
所以，我们将时间逻辑考虑进入了局势模型，使用了LSTM的一种变体GRU
/* 此处添加对GRU的介绍，可以数学，可以可视化 */
我们使用GRU的原因有：
    1. 复杂度较低，现在广泛用于工业界处理有时间逻辑的transformer架构复杂度过高
    2. 可以很好的处理时序逻辑，有论文支撑的成熟方法
    3. 有论文表示，LSTM的鲁棒性并不如GRU，GRU模型在处理非语言数据时表现更优
最后，我们对于记忆的长短进行了度量，发现当记忆=6时是模型的肘点，最终选择看前6个球作为记忆的长度
模型的准确率达到了69%
